ec2 : Elastic Compute Cloud : 

Instance = Server / Box = VM (Virtual machine) = Azure VM = GCP Engine.. 

On-Demand ec2 Instances : Unpredictable workloads/usecases : Test your applicaiton with multiple configs.... 
Pricing : /hr .. /sec (Min of 60 Seconds..)


Reserved Instance (RI) : Predictable workloads.. Longterm runs in aws.. We need to choose the config.. 
Duration : 1 Yr / 3 Yrs.. 

	--> Standard RI : We cannot change the config.. 
	--> Convertable RI : We can change the config (upgrade).. 
	--> Scheduled RI : for repeated req/ persistant req.. (ex: Mon-Fri)

Pricing : 
	--> FullUpfront : Pay 100% while purchasing.. 
	--> Partial Upfront : Pay 30-50% now.. AWs reduces the Hourly price.. Pay for the 		reduced hourly price for actual usage in the month.. 
	--> No Upfront : Pay everything monthly basis. 

--> In AWS Marketplace, we can sell our reserved instances.

Spot Instances : We need to bid our price against aws pricing.. If quoted price is equal / more than aws priceing, we will get the instance.
--> If our application have flexible start/stop duration. 
--> If our app doesn't required 24x7 up and running.. 
--> If you nwant to test High configs with low cost.. 

RUn : 1 Hr , 30 Minutes.. 
Pricing : If Price increased, AWS terminated our instance.. 1 Hr.. 
	Price not increased, WE terminated our instance.. 1 Hr 30 Min..


Fix to multiple regions..  
--> Mumbai
--> N Virginia

____________________________________________________________________________________

D: 01/12/2020

ec2: It supports only Server calss OS. 

Launch a Windows ec2 instance. 

Step 1 : Choose an AMI (Amazon Machine Image) 	: OS (Deafult/GAMI / Marketplace/community) : Windows Server 2016

Step 2: Choose an Instance Type : 

General Purpose : Stable perormance : suitable for most of the workloads.. : t2, t3, a1, m4
COmpute optimized : More CPU usage : c4, c5
GPU Instances : More Graphic usage : p2, g4
Memory utilisation : More RAM/Memory usage : r3, r4, r5, x1, z1
Disk utilisation : d, i

c5.xlarge : 4vCPU, 8 RAM.. 
m5.xlarge : 4vCPU, 16 RAM..
t3.large : 2vCPU, 8 RAM.. 


Free TIER : t2.micro : 1vCPU, 1 RAM.. 

Step 3: Configure Instance Details

Shutdown behavior : Stop
Enable termination protection : Enabled

Step 4: Add Storage

Windows : 30 gb
Linux : 8 gb 

Step 5 : Add tags

Name: XXX
Platform :WIndpows / Linux
Cost Center : AAZAA

Step 6: Configure Security Group

Firewall at Instance level.
Port : 0-65536
WIndows : RDP (Remote Desktop Protocol) : Port 3389 : 
Linux : SSH (Secure Shell) : Port 22 : 

http  : Port 80 : 
https : Port 443 : 
mssql : Port 1433
Mysql : Port 3306

Anywhere : Anyone can connect from any network.. : 0.0.0.0/0
Custom : We can give any network IP
MyIP : It picks currently connected network IP

Step 7 : Review and Create a Keypair.

Keypair: It provides Username, Password information. It works with Public/private key.. ENcryption happens here.


Option 1 : Start --> Remore desktop conenction --> open it.
Option 2 : Win+r --> mstsc 
Option 3 : choose instance --> connect --> RDP CLient --> Download --> Open 


Public IP : Unique across the globe.

Stop/start : We don't loss any data.
Terminate : Delete Permanantly.

Task 1 : Launch a Windows server 2016 instance, Login with initial password, change the password.  Try to use the system password and verify it works or not..????

Task 2 : Create another User in Server, Provide remote desktop permissions and local admin permissions. Try to connect as that newly created user.

	Output: 2 sessions should be active at a time. 

_______________________________________________________________________________________

D: 02/12/2020

ec2 : 

Tenancy : 
--> Shared Tenancy : Underlying physical resources shared with multiple customers. 
--> Dedicated tenancy : Underlying physical resources will not be shared with any other customers. Dedicatedly avaibale to one customer usage.  (NO FREE TIER)
	--> Dedicated Host : We can apply licenses at CPU cores / HW lavel.
	--> Dedicated Instance 

SG :
WIndows : WIndows_ManagementSG : 3389
Linux : Linux_ManagementSG : 22

ec2config service takes sometime to up and running in windows instances. 
Windows : iis

http:// --> 80
https:// --> 443


Security Groups:
--> CHanges to the SG takes effect immediatel.y. 
--> No need to reboot / start / stop the instance.
--> One SG we can associate with multiple instances.
--> One instance can be associated with Multiple SG also. 
--> We always need to takes care about the Inbound rules only, as SG are stateful. 

public doc root path : c:/inetpub/wwwroot/  --> place all the files.


Stop and STart instance will give us a new Public IP address. 
THis is not recommendced for Production env. 

Elastic IP : EIP : If we allocate EIP to our ec2 instance, it gives a fixed IP address. Stop/start won't change this EIP.  (NO FREE TIER ELIGIBLE)


Can we associate multiple IPs to our instance.? Yes..
ENI : Elastic Network Interface.. : 


Task: Launch an ec2 instance and install iis. Deliver for everyone.

______________________________________________________________________________________

D: 03/12/2020


VOlume : Storage 

root : OS : gp2/gp3.. io1/io2.. Standard.. 
IOPS : Input and Output Operations per Second.


general Purpose SSD : gp2/gp3 : most commonly used volume.. STable performance.. 
	Min: 1 GB, Max: 16 TB..   IOPS : 16,000.. 
	Small and medium sized Databases.. (mssql/oracle).. Dev/Test environment..
	Ratio : for 1 gb, we will get 3 IOPS only.. with min of 100.. 1 : 3 ratio.. 	
		

Provisioned IOPS SSD : io1 / io2 : Highest performance SSD.. 
	Min: 4 GB, Max: 16 TB..   IOPS : 64,000.. 
	I/O sensitive application.. i.e; NOSQL, Relational databases.. 
	Ratio : for 1 gb, we will get 50 IOPS, 1:50 ratio... 
	but we have an option to choose desired IOPS count	 

Standard / Magnetic : Lowest cost and lowest performance volumes.. 
	Min: 1 GB, Max: 1 TB..   IOPS : n/a

___

Throughput optimized HDD: st1 :  Low cost HDD volume for Freq accessed data..
	Bigdata, Data waregousing, log processing.. 
	Min: 125 GB.. Max: 16 TB.. Max IOPS: 500
Cold HDD : sc1 : Lowest cost HDD volume for Less Freq accessed data.. 
	COlder data required fewer scans per day.. 
	Min: 125 GB.. Max: 16 TB.. Max IOPS: 250

_________________________

use: gp2 and Magnetic.. These 2 comes under Free tier eligibility. 
30 gb only.. 

connect to your ec2 instance.. in run.. diskmgmt.msc..
Windows: FAT, FAT32, NTFS, ReFS
Linux: ect3, ext4, xfs, nfs

--> Add a brand new volume and make it available. 
--> Increase existing volume size. 

--> VOlumes works at AZ level. If your instance is in ap-south-1a, we need to create a volume in same AZ to associate with this instance. 


Snapshot: Backup copy of our EBS volumes.. 

From a Snapshot, We can create multiple Copies of volumes in Multiple AZs, but in same Region. 


_____________

Task : Launch an ec2 instance in ap-south-1a.. Add 1 gb volume and make it avialble.. Add 1 more gb size to this volume and make 2gb availble.

Task 2 : launch an ec2 instance in ap-south-1b...   Get a copy of 2gb volume from task 1 and make it available for task 2 instance. 

______________

D: 04/12/2020

DLM : Data Lifecycle Manager : 
--> VOlume Level
--> Instance Level

Task: Launch an ec2 instance with 1 gb additional volume, and configure to take a backup copy at 06:00 AM IST Daily. Retention period: 2 Days.. 


Images : 
Scenario : 100 x Ec2 instance.. Install IIS, Install with AV, MS Office, CUstom WP, Putty, pdf.. 

GoldenAMI : CUstomized AMI.. 

Launch 1 EC2 instance --> Connect and configure with required settings --> Image

Recommanded: Stop instance before creating an Image. (follow/skip)

Using this GAMI --> We can copy this to ANother Region..
We can share this with another AWS account user. Or We can even make it public. 


CIS STandard: At ent level.. all our OS/Instances should comply with CIS benchmarks. 

______________________________________________________________________________________

D: 07/12/2020

Linux Instances : 
--> Putty
--> Install Openssh and use defualt windows cmd prompt
--> Install Git for windows and use GIT terminal

Step 1 : Choose an AMI : Amazon Linux 2  (Fedora)

Step 2 : Free Tier : 750 Hrs/Month : t2.micro

Per Month: 750 Hours Windows INstance with t2.micro
Per Month: 750 Hours Linux INstance with t2.micro


Step 3 : Configure additional options

Step 4 : CHoose the Volume (Min : 8 Gb)

Step 5 : Associate valid tags

Step 6 : Configure Security Groups.

Linux : Port 22 : SSH : Secure Shell

Step 7: Create a Keypair and Launch instance.

__________________
GIT : https://git-scm.com/download/win

Navigate to the location, where our keypair is located. Right click.. Open GIT BASH here.

Verify the File by giving "ls" command.

ssh -i keypair.pem ec2-user@publicIP
__________________

To use Command Prompt.. Install "Openssh tools".   (Settings --> Apps --> Additional apps --> Install Openssh client)

ssh -i keypair.pem ec2-user@publicip

__________________

Putty.. 
--> Putty won;t support .pem format. It supports .ppk file format. So, we need to convert .pem to .ppk.. We use "PuttyGen" for the convertion.


https://www.chiark.greenend.org.uk/~sgtatham/putty/latest.html

putty.exe
puttygen.exe


___________________________________

sudo su			--> Switch to root user. 

always give "sudo" if youa re working as ec2-user.

whoami			--> tells us as what user we are working now.
hostname		--> Tells us the computer/instance name.
ls			--> List the files
ls -a			--> List everything including hidden
cat filename		--> Displays the file content without opening it.
more filename		--> Displays the file content without opening it.
pwd			--> Print working directory

rpm : redhat package manager : Cannot resolve dependencies automatically.

yum : Yellodog update manager : 

yum install packagename
yum install httpd -y		--> Apache webserver
service httpd status		--> TO know the apache status
service httpd start / stop / restart

chkconfig httpd on		--> Service adds to startup.. Starts after restats


sudo su
yum install httpd -y
service httpd start
chkconfig httpd on
cd /var/www/html/		--> Create all the webpages


editors: vi, nano, vim.. 

VIM : 

vim filename
Press I		--> To goto Insert mode
Press Esc	--> To comeout from INSERT mode
:wq		--> Write and Quit
:q!		--> Quit the editor without writing the changes. 



Task : Launch Linux ec2 instance and connect to it using Putty and Openssh.

Task 2 : Make your ec2 instance as apache webserver. and deliver custom webpage.

Task 3 : Launch another ec2 instance, and Install "nginx" and deliver custom webpage.

Task 4 : Instead of ec2-user, create a custom user and provide custom user login permissions. (If you have exp with linux)

_______________________________________________________________________________________

D: 08/12/2020

windows: diskmanagement : Verify

df -Th		:	Verify available to use volumes

lsblk 		: 	all the volumes associated to instance 

/dev		: 	all devices location in Linux OS
/dev/xvdb	: 	Newly added volume name
mkdir		: 	Make directory (Create a folder)


write a file system to newly added volume.
mkfs -t xfs /dev/xvdb

mkdir 1gbvolume
mount /dev/xvdb 1gbvolume		--> this is a temp mount.. 

By adding an entry in /etc/fstab file, we can make it as a perm mount. 
Get the entry information from /etc/mtab file. 

cat /etc/mtab.. and get the entry information.. 

/dev/xvdb /home/ec2-user/1gbvolume xfs rw,relatime,attr2,inode64,noquota 0 0

open /etc/fstab.. and add the above entry.

lsblk : get the name
mkdir volume
mkfs -t xfs /dev/xvd*
mount /dev/xvd* volume
cat /etc/mtab
vim /etc/fstab


Linux: How to recover our ec2 instance, if we loss keypair..!!

Instance --> Create a GoldenAMI --> Launch a new instance (associate a new keypair).


Task : Launch a Linux INstance, Add 1gb volume to instance and make it avaibale. and add entry in fstab file for this 1gb volume.

Task 2 : Add 1 more gb to the existing volume.. and make it available. 

help: https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/recognize-expanded-volume-linux.html

___________________________________________________________

> : pipe the inforamtion but overwrite the existing data.
>> : Pipes the information and add entry to the existing data.

Userdata and Metadata: 

________________________________________________________________________________________

D: 09/12/2020

metadata: 

Windows: open browser : http://169.254.169.254/latest/meta-data/
Linux : curl http://169.254.169.254/latest/meta-data/public-ipv4

ami-id
ami-launch-index
ami-manifest-path
block-device-mapping/
events/
hibernation/
hostname
identity-credentials/
instance-action
instance-id
instance-life-cycle
instance-type
local-hostname
local-ipv4
mac
metrics/
network/
placement/
profile
public-hostname
public-ipv4
public-keys/
reservation-id
security-groups


Userdata: BSS : BootStrap Script: It exustes when we launch instance.. 

use "cloud-init" to execute script after every reboot.

#!/bin/bash
yum install httpd -y
service httpd start
chkconfig httpd on
echo "<h1>THis is a BSS Webpage</h1>" >> /var/www/html/index.html

Windows:

<powershell>
commands
</powershell>


<script>
tzutil /s "India Standard Time"
echo %date% %time% >> test.txt
</script>
<persist>true</persist>		--> Executes the command after every reboot


_______________________________
ELB : Elastic Load Balancer.

Scaling : 
--> Vertical Scaling
--> horizontal Scaling

3 Types of ELBs avaible in AWS.
--> Classic ELB : http, https, tcp, udp.. all legacy protocols.. Previous Generation..
--> Application ELB : http & https
--> Network ELB : tcp, udp, tcp/tls.. 

--> We won;t get a Pubic IP add, We'll get a DNS name for ELB.
--> Internal ELB : Works with in AWS env only.
--> Internet ELB : Access across the globe

InService
OutofService

Task : Launch 2 ec2 instance in multiple AZs.. Pass the userdata to make instance as webserver.. Configure the Classic ELB with both the instances.

Task 2 : Launch 3rd ec2 instance, make it as webserver and add this onstance to the Existing ELB.

________________________________________________________________________________________

D: 10/12/2020

Application ELB

#!/bin/bash
yum install httpd -y
service httpd start
chkconfig httpd on
echo "<h1>THis is my 8080 WebServer</h1>" >> /var/www/html/index.html


--> Can we change the target type of a TG after its created.
	--> NO
--> ELB uses nested roundrobin algorithm. 


Network ELB : Supports TCP, UDP, TLS protocols.. 
--> We have an Advantage, We can allocate an Elastic IP to our Network ELB.
--> it works with FLowhash Algorithm. 


How we can enable ELB Logging. 
--> Access logs










